type Query {
  info: String!
  feed(
    filter: String
    skip: Int
    take: Int
    orderBy: PostOrderByInput
  ): [Post!]!
}

type Mutation {
  post(title: String!, body: String!): Post!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type Post {
  id: ID!
  createdAt: String!
  title: String!
  body: String!
  author: User
}

input PostOrderByInput {
  title: Sort
  body: Sort
  createdAt: Sort
}

enum Sort {
  asc
  desc
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post!]!
}
